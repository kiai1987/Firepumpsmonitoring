<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>VFD Monitoring Dashboard</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(to right, #eef2f3, #8e9eab);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    .dashboard {
      background: white;
      padding: 30px;
      border-radius: 16px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
      width: 100%;
      max-width: 500px;
      transition: all 0.3s ease-in-out;
    }
    h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #2c3e50;
    }
    .row {
      display: flex;
      justify-content: space-between;
      margin: 12px 0;
      padding: 12px;
      border-radius: 8px;
      background: #f9f9f9;
      box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.05);
    }
    .label {
      font-weight: 600;
      color: #555;
    }
    .value {
      font-family: monospace;
      font-weight: 600;
    }
    .online {
      color: #27ae60;
    }
    .offline {
      color: #c0392b;
    }
  </style>
</head>
<body>
  <div class="dashboard">
    <h2>VFD Monitoring Dashboard</h2>
    <div class="row"><span class="label">VFD 1 Status</span><span id="vfd1" class="value">--</span></div>
    <div class="row"><span class="label">VFD 2 Status</span><span id="vfd2" class="value">--</span></div>
    <div class="row"><span class="label">Pressure</span><span id="pressure" class="value">-- bar</span></div>
    <div class="row"><span class="label">Active VFD</span><span id="active" class="value">--</span></div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.1.0/mqttws31.min.js"></script>
  <script>
    const mqttHost = 'wss://test.mosquitto.org:8081';
    const topic = 'vfd/status';
    const clientId = 'web_' + Math.random().toString(16).substr(2, 8);
    const client = new Paho.MQTT.Client(mqttHost, clientId);

    client.onConnectionLost = () => console.log("MQTT connection lost");
    client.onMessageArrived = (message) => {
      const data = JSON.parse(message.payloadString);
      document.getElementById('vfd1').textContent = data.vfd1.status;
      document.getElementById('vfd1').className = data.vfd1.online ? 'value online' : 'value offline';
      document.getElementById('vfd2').textContent = data.vfd2.status;
      document.getElementById('vfd2').className = data.vfd2.online ? 'value online' : 'value offline';
      document.getElementById('pressure').textContent = data.pressure + ' bar';
      document.getElementById('active').textContent = data.active;
    };

    client.connect({
      onSuccess: () => {
        console.log('MQTT connected');
        client.subscribe(topic);
      },
      useSSL: true
    });
  </script>
</body>
</html>

